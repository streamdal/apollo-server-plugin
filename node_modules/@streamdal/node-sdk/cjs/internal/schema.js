"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.sendSchema = void 0;
const sp_internal_1 = require("@streamdal/protos/protos/sp_internal");
const register_js_1 = require("./register.js");
const sendSchema = async ({ configs, audience, schema, }) => {
    try {
        if (!schema) {
            console.info("No schema found, skipping send schema");
            return;
        }
        const key = (0, register_js_1.audienceKey)(audience);
        const existing = register_js_1.internal.schemas.get(key);
        if (!existing || existing.toString() !== schema.toString()) {
            register_js_1.internal.schemas.set(key, schema);
            const schemaRequest = sp_internal_1.SendSchemaRequest.create({
                audience,
                schema: { jsonSchema: schema },
            });
            console.debug("sending schema...");
            const call = configs.grpcClient.sendSchema(schemaRequest, {
                meta: { "auth-token": configs.streamdalToken },
            });
            await call.headers;
            console.debug("schema sent");
        }
    }
    catch (e) {
        console.error("Error sending schema", e);
    }
};
exports.sendSchema = sendSchema;
//# sourceMappingURL=schema.js.map