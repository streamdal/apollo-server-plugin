"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.addAudience = exports.addAudiences = void 0;
const sp_common_1 = require("@streamdal/protos/protos/sp_common");
const register_js_1 = require("./register.js");
const addAudiences = async (configs) => {
    if (!configs.audiences || configs.audiences.length === 0) {
        return;
    }
    for (const audience of configs.audiences) {
        await (0, exports.addAudience)({ configs, audience });
    }
};
exports.addAudiences = addAudiences;
const addAudience = async ({ configs, audience }) => {
    try {
        if (register_js_1.internal.audiences.has((0, register_js_1.audienceKey)(audience))) {
            return;
        }
        const { response } = await configs.grpcClient.newAudience({
            sessionId: configs.sessionId,
            audience,
        }, { meta: { "auth-token": configs.streamdalToken } });
        if (response.code === sp_common_1.ResponseCode.OK) {
            register_js_1.internal.audiences.set((0, register_js_1.audienceKey)(audience), {
                audience,
                tails: new Map(),
            });
        }
        else {
            console.error("error adding audience", response.message);
        }
    }
    catch (error) {
        console.error("error adding audience", error);
    }
};
exports.addAudience = addAudience;
//# sourceMappingURL=audience.js.map