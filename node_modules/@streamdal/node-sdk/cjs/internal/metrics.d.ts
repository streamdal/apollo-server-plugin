import { Audience, Metric } from "@streamdal/protos/protos/sp_common";
import { IInternalClient } from "@streamdal/protos/protos/sp_internal.client";
import { Pipeline } from "@streamdal/protos/protos/sp_pipeline";
import { StepStatus } from "@streamdal/protos/protos/sp_sdk";
import ReadWriteLock from "rwlock";
export declare const METRIC_INTERVAL = 1000;
export declare const metrics: Map<string, Metric>;
export declare const lock: ReadWriteLock;
export interface MetricsConfigs {
    grpcClient: IInternalClient;
    streamdalToken: string;
}
export declare const getStepLabels: (audience: Audience, pipeline: Pipeline) => {
    service: string;
    component: string;
    operation: string;
    pipeline_id: string;
    pipeline_name: string;
};
export declare const stepMetrics: ({ audience, stepStatus, pipeline, payloadSize, }: {
    audience: Audience;
    stepStatus: StepStatus;
    pipeline: Pipeline;
    payloadSize: number;
}) => Promise<void>;
export declare const audienceMetrics: (audience: Audience, payloadSize: number) => Promise<void>;
export declare const sendMetrics: (configs: MetricsConfigs) => void;
