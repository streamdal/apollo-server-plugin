"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.notifyStep = exports.statusToNotifyType = void 0;
const sp_internal_1 = require("@streamdal/protos/protos/sp_internal");
const sp_sdk_1 = require("@streamdal/protos/protos/sp_sdk");
const statusToNotifyType = (status) => {
    switch (status) {
        case sp_sdk_1.ExecStatus.TRUE: {
            return sp_internal_1.NotifyRequest_ConditionType.ON_TRUE;
        }
        case sp_sdk_1.ExecStatus.FALSE: {
            return sp_internal_1.NotifyRequest_ConditionType.ON_FALSE;
        }
        case sp_sdk_1.ExecStatus.ERROR: {
            return sp_internal_1.NotifyRequest_ConditionType.ON_ERROR;
        }
        default:
            return sp_internal_1.NotifyRequest_ConditionType.UNSET;
    }
};
exports.statusToNotifyType = statusToNotifyType;
const notifyStep = async ({ configs, step, stepStatus, audience, pipelineId, payload, }) => {
    console.debug("notifying error step", step.name);
    try {
        await configs.grpcClient.notify({
            conditionType: (0, exports.statusToNotifyType)(stepStatus.status),
            step,
            audience,
            pipelineId,
            payload,
            occurredAtUnixTsUtc: Date.now().toString(),
        }, { meta: { "auth-token": configs.streamdalToken } });
    }
    catch (e) {
        console.error("error sending notification to server", e);
    }
};
exports.notifyStep = notifyStep;
//# sourceMappingURL=notify.js.map